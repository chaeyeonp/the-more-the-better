{"remainingRequest":"C:\\Users\\Playdata\\Desktop\\the-more-the-better\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Playdata\\Desktop\\the-more-the-better\\frontend\\src\\components\\Login.vue?vue&type=style&index=0&id=ef68022e&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Playdata\\Desktop\\the-more-the-better\\frontend\\src\\components\\Login.vue","mtime":1599534870000},{"path":"C:\\Users\\Playdata\\Desktop\\the-more-the-better\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Playdata\\Desktop\\the-more-the-better\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Playdata\\Desktop\\the-more-the-better\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Playdata\\Desktop\\the-more-the-better\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Playdata\\Desktop\\the-more-the-better\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0IHVybCgiaHR0cHM6Ly9zdGFja3BhdGguYm9vdHN0cmFwY2RuLmNvbS9ib290c3RyYXAvNC4zLjEvY3NzL2Jvb3RzdHJhcC5taW4uY3NzIik7CkBpbXBvcnQgdXJsKCJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PURvK0h5ZW9uJmRpc3BsYXk9c3dhcCIpOwoKCmJvZHkgewogICAgZm9udC1mYW1pbHk6ICdEbyBIeWVvbicsIHNhbnMtc2VyaWY7CiAgICBAaW1wb3J0IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1EbytIeWVvbiZkaXNwbGF5PXN3YXAnKTsKICAgIGZvbnQtc2l6ZTo0MHB4OwogICAgZm9udC1jb2xvcjp3aGl0ZTsKCgp9CgpidXR0b24sCi5yZWdpc3RlciB7CiAgICB3aWR0aDogNDAwcHg7CiAgICBtYXJnaW46IGF1dG87CiAgICBmb250LXNpemU6IDEwcHg7CiAgICBmb250LWZhbWlseTogJ0RvIEh5ZW9uJywgc2Fucy1zZXJpZjsKfQoKLyogUmVzZXQgdG9wIGFuZCBib3R0b20gbWFyZ2lucyBmcm9tIGNlcnRhaW4gZWxlbWVudHMgKi8KLmxvZ2luLWhlYWRlciwKCmJ1dHRvbiwKLnJlZ2lzdGVyIHAgewogICAgY29sb3I6IHdoaXRlOwogICAgZm9udC1mYW1pbHk6ICdEbyBIeWVvbicsIHNhbnMtc2VyaWY7Cn0KCi8qIFRoZSB0cmlhbmdsZSBmb3JtIGlzIGFjaGlldmVkIGJ5IGEgQ1NTIGhhY2sgKi8KLnJlZ2lzdGVyLXRyaWFuZ2xlIHsKICAgIHdpZHRoOiAwOwogICAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogICAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7CiAgICBib3JkZXI6IDEycHggc29saWQgd2hpdGU7CiAgICBib3JkZXItYm90dG9tLWNvbG9yOiByZ2IoMTQ2LCAxMzksIDEzNyk7Cn0KCi5sb2dpbi1oZWFkZXIgewogICAgYmFja2dyb3VuZDogcmdiKDE0NiwgMTM5LCAxMzcpOwogICAgcGFkZGluZzogMjBweDsKICAgIGZvbnQtc2l6ZTogMS40ZW07CiAgICBmb250LXdlaWdodDogbm9ybWFsOwogICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsKICAgIGNvbG9yOiAjZmZmOwp9CgpidXR0b24sCi5yZWdpc3Rlci1jb250YWluZXIgewogICAgYmFja2dyb3VuZDogZ3JleTsKICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjsKICAgIHBhZGRpbmc6IDEycHg7Cn0KCi8qIEV2ZXJ5IHJvdyBpbnNpZGUgLmxvZ2luLWNvbnRhaW5lciBpcyBkZWZpbmVkIHdpdGggcCB0YWdzICovCmJ1dHRvbiwKLnJlZ2lzdGVyIHAgewogICAgcGFkZGluZzogMTJweDsKICAgIGZvbnQtZmFtaWx5OiAnRG8gSHllb24nLCBzYW5zLXNlcmlmOwp9CgpidXR0b24sCi5yZWdpc3RlciBpbnB1dCB7CiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OwogICAgZGlzcGxheTogYmxvY2s7CiAgICB3aWR0aDogMTAwJTsKICAgIGJvcmRlci13aWR0aDogMXB4OwogICAgYm9yZGVyLXN0eWxlOiBzb2xpZDsKICAgIHBhZGRpbmc6IDE2cHg7CiAgICBvdXRsaW5lOiAwOwogICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7CiAgICBmb250LXNpemU6IDAuOTVlbTsKICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjsKICAgIGJhY2tncm91bmQ6ICNmZmY7Cn0KCi5yZWdpc3RlciBpbnB1dFt0eXBlPSJtZW1faWQiXSwKLnJlZ2lzdGVyIGlucHV0W3R5cGU9InBhc3N3b3JkIl0gewogICAgYmFja2dyb3VuZDogI2ZmZjsKICAgIGJvcmRlci1jb2xvcjogI2JiYjsKICAgIGNvbG9yOiAjNTU1Owp9CgovKiBUZXh0IGZpZWxkcycgZm9jdXMgZWZmZWN0ICovCi5yZWdpc3RlciBpbnB1dFt0eXBlPSJtZW1faWQiXTpmb2N1cywKLnJlZ2lzdGVyIGlucHV0W3R5cGU9InBhc3N3b3JkIl06Zm9jdXMgewogICAgYm9yZGVyLWNvbG9yOiAjODg4Owp9CgpidXR0b24sCi5yZWdpc3RlciBpbnB1dFt0eXBlPSJzdWJtaXQiXSB7CiAgICBiYWNrZ3JvdW5kOiByZ2IoMTQ2LCAxMzksIDEzNyk7CiAgICBib3JkZXItY29sb3I6IHdoaXRlOwogICAgY29sb3I6ICNmZmY7CiAgICBjdXJzb3I6IHBvaW50ZXI7Cn0KCi5yZWdpc3RlciBpbnB1dFt0eXBlPSJzdWJtaXQiXTpob3ZlciB7CiAgICBiYWNrZ3JvdW5kOiByZ2IoMjI2LCAyMjYsIDE2Mik7Cn0KCi5yZWdpc3RlciBpbnB1dFt0eXBlPSJzdWJtaXQiXTpmb2N1cyB7CiAgICBib3JkZXItY29sb3I6IHJnYigyMjYsIDIyNiwgMTYyKTsKfQoKLypidXR0b257Ki8KLyogICAgd2lkdGg6IDEwMCU7Ki8KLyogICAgYWxpZ24tc2VsZjogY2VudGVyOyovCi8qfSovCgovKi5sb2dpbiBpbnB1dFt0eXBlPSJzdWJtaXQiXXsqLwovKiAgICB3aWR0aCA6IDEwNSU7Ki8KLyogICAgYWxpZ24tc2VsZjogY2VudGVyOyovCi8qfSovCgouYnRuLXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogdGFuOwogICAgYm9yZGVyOiBub25lOwogICAgY29sb3I6ICNmZmZmZmY7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICBmb250LWZhbWlseTogJ0RvIEh5ZW9uJywgc2Fucy1zZXJpZjsKICAgIGZvbnQtc2l6ZTo0MHB4OwogICAgZm9udC1zaXplOiAxZW07CiAgICBmb250LXNpemU6IDIycHg7CiAgICBsaW5lLWhlaWdodDogMWVtOwogICAgb3V0bGluZTogbm9uZTsKICAgIHBhZGRpbmc6IDEycHggNDBweCAxMHB4OwogICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsKICAgIC8qZm9udC13ZWlnaHQ6IDcwMDsqLwoKfQouYnRuLXI6YmVmb3JlLAouYnRuLXI6YWZ0ZXIgewogICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDsKICAgIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuMjVzOwogICAgdHJhbnNpdGlvbjogYWxsIDAuMjVzOwogICAgYm9yZGVyLXN0eWxlOiBzb2xpZDsKICAgIGJvcmRlci13aWR0aDogMDsKICAgIGNvbnRlbnQ6ICIiOwogICAgaGVpZ2h0OiAyNHB4OwogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgd2lkdGg6IDI0cHg7Cn0KLmJ0bi1yOmJlZm9yZSB7CiAgICBib3JkZXItY29sb3I6ICNjNDcxMzU7CiAgICBib3JkZXItcmlnaHQtd2lkdGg6IDJweDsKICAgIGJvcmRlci10b3Atd2lkdGg6IDJweDsKICAgIHJpZ2h0OiAtNXB4OwogICAgdG9wOiAtNXB4Owp9Ci5idG4tcjphZnRlciB7CiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAycHg7CiAgICBib3JkZXItY29sb3I6ICNjNDcxMzU7CiAgICBib3JkZXItbGVmdC13aWR0aDogMnB4OwogICAgYm90dG9tOiAtNXB4OwogICAgbGVmdDogLTVweDsKfQouYnRuLXI6aG92ZXIsCi5idG4tci5ob3ZlciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzQ3MTM1Owp9Ci5idG4tcjpob3ZlcjpiZWZvcmUsCi5idG4tci5ob3ZlcjpiZWZvcmUsCi5idG4tcjpob3ZlcjphZnRlciwKLmJ0bi1yLmhvdmVyOmFmdGVyIHsKICAgIGhlaWdodDogMTAwJTsKICAgIHdpZHRoOiAxMDAlOwp9Cg=="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4IA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"register\">\n        <div class=\"register-triangle\"></div>\n        <img src=\"../assets/login.png\" width=100%>\n        <h2 style=\"align-content: center\">{{message1}}<br><br></h2>\n\n        <form class=\"register-container\">\n            <p>ID : <input type=\"eid\" name=\"eid\" id=\"eid\" v-model=\"eid\" ></p>\n            <p>PW : <input type=\"password\" name=\"login\" id=\"pass\" v-model=\"pw\" > </p>\n            <p><input type=\"submit\" @click=\"login\" value=\"로그인\" id=\"login\"></p>\n<!--            <button id=\"logout\" @click=\"logout\">로그아웃</button>-->\n            <!-- <button id=\"getInfo\" @click=\"getInfo\">상세 정보 확인</button> -->\n            <button v-on:click=\"register\" class = \"btn-r\">아직 회원이 아니신가요?</button>\n        </form>\n\n        <br><hr><br>\n\n    </div>\n</template>\n\n<script>\n    // const axios = require('axios').default;\n\n    export default {\n        name: 'HelloWorld',\n        props: {\n            msg: String\n        },\n        data: function() {\n            return {\n                eid : \"\",\n                pw : \"\",\n                message1: \" 다다익선(多多益善) 회원이신가요? \",\n                message2:\"아직 회원이 아니신가요?\",\n                status: \"\",\n                token: \"\",\n                info: \"\",\n                detailInfo: \"\",\n                result: false\n            }\n        },\n\n        methods:{\n            setInfo(status, token, info){\n                this.status = status;\n                this.token = token;\n                this.info = info;\n                this.result = true;\n            },\n            setDetailInfo(status, token, info, detailInfo){\n                this.status = status;\n                this.token = token;\n                this.info = info;\n                this.detailInfo = detailInfo;\n            },\n            register(){\n                this.$router.push({ name: 'Register' })\n\n            },\n            logout(){\n                // storage.setItem(\"jwt-auth-token\", \"\");\n                // storage.setItem(\"login_eid\", \"\");\n\n                // this.mem_id = \"\";\n                // this.mem_pw = \"\";\n                //\n                // this.message = \"로그인해 주세요\";\n                // this.result = false;\n                //\n                // this.setDetailInfo(\"로그아웃 성공\", \"\", \"\");\n\n            },\n            getInfo() {\n                //         axios.post(\"/api/info\", {\n                //                 mem_id : this.mem_id,\n                //                 mem_pw : this.mem_pw\n                //             },\n                //             {\n                //                 headers : {\n                //                     // \"jwt-auth-token\" : storage.getItem(\"jwt-auth-token\")\n                //                 }\n                //             }\n                //         ).then(res => {\n                //             // this.setDetailInfo( \"정보 조회 성공\", storage.getItem(\"jwt-auth-token\"), this.info, JSON.stringify(res.data));\n                //         }).catch(e => {\n                //             this.setDetailInfo(\"정보 조회 실패\", \"\", e.response.data.msg);\n                //         });\n                     },\n                     login(){\n                //         // storage.setItem(\"jwt-auth-token\", \"\");\n                //         // storage.setItem(\"login_eid\", \"\");\n                //\n                //         axios.post(\"/api/logincheck/signin\", {\n                //             mem_id : this.mem_id,\n                //             mem_pw : this.mem_pw\n                //         }).then(res =>{\n                //             if(res.data.status){\n                //\n                //                 this.mem_id = \"\";\n                //                 this.mem_pw = \"\";\n                //                 this.message = res.data.data.mem_id + \"로 로그인 되었습니다\";\n                //\n                //                 console.dir(res.headers[\"jwt-auth-token\"]);\n                //                 console.log(\"//////////\");\n                //\n                //                 //화면에 정보 출력\n                //                 this.setInfo(\"로그인 성공\", res.headers[\"jwt-auth-token\"], JSON.stringify(res.data.data));\n                //\n                //                 //토큰 & mem_id 정보 저장\n                //                 // storage.setItem(\"jwt-auth-token\", res.headers[\"jwt-auth-token\"]);\n                //                 // storage.setItem(\"login_eid\", res.data.data.mem_id);\n                //\n                //             }else{\n                //\n                //                 this.setInfo(\"\", \"\", \"\");\n                //                 this.message = \"로그인 하세요\";\n                //                 alert(\"입력 정보를 확인\");\n                //\n                //             }\n                //\n                //         }).catch(e => {\n                //             this.setInfo(\"실패\", \"\", JSON.stringify(e.response || e.message));\n                //         });\n                     },\n                     init(){\n                //         // if(storage.getItem(\"jwt-auth-token\")){\n                //         //     this.message = storage.getItem(\"login_eid\") + \"로 로그인 되었습니다\";\n                //         // }else{\n                //         //     storage.setItem(\"jwt-auth-token\", \"\");\n                //         // }\n                //     }//init()\n                // }, mounted(){\n                //     this.init();\n                 }\n            }\n    }\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n    @import url(\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\");\n    @import url(\"https://fonts.googleapis.com/css2?family=Do+Hyeon&display=swap\");\n\n\n    body {\n        font-family: 'Do Hyeon', sans-serif;\n        @import url('https://fonts.googleapis.com/css2?family=Do+Hyeon&display=swap');\n        font-size:40px;\n        font-color:white;\n\n\n    }\n\n    button,\n    .register {\n        width: 400px;\n        margin: auto;\n        font-size: 10px;\n        font-family: 'Do Hyeon', sans-serif;\n    }\n\n    /* Reset top and bottom margins from certain elements */\n    .login-header,\n\n    button,\n    .register p {\n        color: white;\n        font-family: 'Do Hyeon', sans-serif;\n    }\n\n    /* The triangle form is achieved by a CSS hack */\n    .register-triangle {\n        width: 0;\n        margin-right: auto;\n        margin-left: auto;\n        align-content: center;\n        border: 12px solid white;\n        border-bottom-color: rgb(146, 139, 137);\n    }\n\n    .login-header {\n        background: rgb(146, 139, 137);\n        padding: 20px;\n        font-size: 1.4em;\n        font-weight: normal;\n        text-align: center;\n        text-transform: uppercase;\n        color: #fff;\n    }\n\n    button,\n    .register-container {\n        background: grey;\n        align-content: center;\n        padding: 12px;\n    }\n\n    /* Every row inside .login-container is defined with p tags */\n    button,\n    .register p {\n        padding: 12px;\n        font-family: 'Do Hyeon', sans-serif;\n    }\n\n    button,\n    .register input {\n        box-sizing: border-box;\n        display: block;\n        width: 100%;\n        border-width: 1px;\n        border-style: solid;\n        padding: 16px;\n        outline: 0;\n        font-family: inherit;\n        font-size: 0.95em;\n        align-content: center;\n        background: #fff;\n    }\n\n    .register input[type=\"mem_id\"],\n    .register input[type=\"password\"] {\n        background: #fff;\n        border-color: #bbb;\n        color: #555;\n    }\n\n    /* Text fields' focus effect */\n    .register input[type=\"mem_id\"]:focus,\n    .register input[type=\"password\"]:focus {\n        border-color: #888;\n    }\n\n    button,\n    .register input[type=\"submit\"] {\n        background: rgb(146, 139, 137);\n        border-color: white;\n        color: #fff;\n        cursor: pointer;\n    }\n\n    .register input[type=\"submit\"]:hover {\n        background: rgb(226, 226, 162);\n    }\n\n    .register input[type=\"submit\"]:focus {\n        border-color: rgb(226, 226, 162);\n    }\n\n    /*button{*/\n    /*    width: 100%;*/\n    /*    align-self: center;*/\n    /*}*/\n\n    /*.login input[type=\"submit\"]{*/\n    /*    width : 105%;*/\n    /*    align-self: center;*/\n    /*}*/\n\n    .btn-r {\n        background-color: tan;\n        border: none;\n        color: #ffffff;\n        cursor: pointer;\n        display: inline-block;\n        font-family: 'Do Hyeon', sans-serif;\n        font-size:40px;\n        font-size: 1em;\n        font-size: 22px;\n        line-height: 1em;\n        outline: none;\n        padding: 12px 40px 10px;\n        position: relative;\n        text-transform: uppercase;\n        /*font-weight: 700;*/\n\n    }\n    .btn-r:before,\n    .btn-r:after {\n        border-color: transparent;\n        -webkit-transition: all 0.25s;\n        transition: all 0.25s;\n        border-style: solid;\n        border-width: 0;\n        content: \"\";\n        height: 24px;\n        position: absolute;\n        width: 24px;\n    }\n    .btn-r:before {\n        border-color: #c47135;\n        border-right-width: 2px;\n        border-top-width: 2px;\n        right: -5px;\n        top: -5px;\n    }\n    .btn-r:after {\n        border-bottom-width: 2px;\n        border-color: #c47135;\n        border-left-width: 2px;\n        bottom: -5px;\n        left: -5px;\n    }\n    .btn-r:hover,\n    .btn-r.hover {\n        background-color: #c47135;\n    }\n    .btn-r:hover:before,\n    .btn-r.hover:before,\n    .btn-r:hover:after,\n    .btn-r.hover:after {\n        height: 100%;\n        width: 100%;\n    }\n</style>\n"]}]}