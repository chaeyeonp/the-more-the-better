{"remainingRequest":"C:\\Users\\Playdata\\Desktop\\the-more-the-better\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Playdata\\Desktop\\the-more-the-better\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Playdata\\Desktop\\the-more-the-better\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Playdata\\Desktop\\the-more-the-better\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Playdata\\Desktop\\the-more-the-better\\frontend\\src\\components\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Playdata\\Desktop\\the-more-the-better\\frontend\\src\\components\\Login.vue","mtime":1599534870000},{"path":"C:\\Users\\Playdata\\Desktop\\the-more-the-better\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Playdata\\Desktop\\the-more-the-better\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Playdata\\Desktop\\the-more-the-better\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Playdata\\Desktop\\the-more-the-better\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Playdata\\Desktop\\the-more-the-better\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8gY29uc3QgYXhpb3MgPSByZXF1aXJlKCdheGlvcycpLmRlZmF1bHQ7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnSGVsbG9Xb3JsZCcsCiAgcHJvcHM6IHsKICAgIG1zZzogU3RyaW5nCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZWlkOiAiIiwKICAgICAgcHc6ICIiLAogICAgICBtZXNzYWdlMTogIiDri6Tri6TsnbXshKAo5aSa5aSa55uK5ZaEKSDtmozsm5DsnbTsi6DqsIDsmpQ/ICIsCiAgICAgIG1lc3NhZ2UyOiAi7JWE7KeBIO2ajOybkOydtCDslYTri4jsi6DqsIDsmpQ/IiwKICAgICAgc3RhdHVzOiAiIiwKICAgICAgdG9rZW46ICIiLAogICAgICBpbmZvOiAiIiwKICAgICAgZGV0YWlsSW5mbzogIiIsCiAgICAgIHJlc3VsdDogZmFsc2UKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBzZXRJbmZvOiBmdW5jdGlvbiBzZXRJbmZvKHN0YXR1cywgdG9rZW4sIGluZm8pIHsKICAgICAgdGhpcy5zdGF0dXMgPSBzdGF0dXM7CiAgICAgIHRoaXMudG9rZW4gPSB0b2tlbjsKICAgICAgdGhpcy5pbmZvID0gaW5mbzsKICAgICAgdGhpcy5yZXN1bHQgPSB0cnVlOwogICAgfSwKICAgIHNldERldGFpbEluZm86IGZ1bmN0aW9uIHNldERldGFpbEluZm8oc3RhdHVzLCB0b2tlbiwgaW5mbywgZGV0YWlsSW5mbykgewogICAgICB0aGlzLnN0YXR1cyA9IHN0YXR1czsKICAgICAgdGhpcy50b2tlbiA9IHRva2VuOwogICAgICB0aGlzLmluZm8gPSBpbmZvOwogICAgICB0aGlzLmRldGFpbEluZm8gPSBkZXRhaWxJbmZvOwogICAgfSwKICAgIHJlZ2lzdGVyOiBmdW5jdGlvbiByZWdpc3RlcigpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgIG5hbWU6ICdSZWdpc3RlcicKICAgICAgfSk7CiAgICB9LAogICAgbG9nb3V0OiBmdW5jdGlvbiBsb2dvdXQoKSB7Ly8gc3RvcmFnZS5zZXRJdGVtKCJqd3QtYXV0aC10b2tlbiIsICIiKTsKICAgICAgLy8gc3RvcmFnZS5zZXRJdGVtKCJsb2dpbl9laWQiLCAiIik7CiAgICAgIC8vIHRoaXMubWVtX2lkID0gIiI7CiAgICAgIC8vIHRoaXMubWVtX3B3ID0gIiI7CiAgICAgIC8vCiAgICAgIC8vIHRoaXMubWVzc2FnZSA9ICLroZzqt7jsnbjtlbQg7KO87IS47JqUIjsKICAgICAgLy8gdGhpcy5yZXN1bHQgPSBmYWxzZTsKICAgICAgLy8KICAgICAgLy8gdGhpcy5zZXREZXRhaWxJbmZvKCLroZzqt7jslYTsm4Mg7ISx6rO1IiwgIiIsICIiKTsKICAgIH0sCiAgICBnZXRJbmZvOiBmdW5jdGlvbiBnZXRJbmZvKCkgey8vICAgICAgICAgYXhpb3MucG9zdCgiL2FwaS9pbmZvIiwgewogICAgICAvLyAgICAgICAgICAgICAgICAgbWVtX2lkIDogdGhpcy5tZW1faWQsCiAgICAgIC8vICAgICAgICAgICAgICAgICBtZW1fcHcgOiB0aGlzLm1lbV9wdwogICAgICAvLyAgICAgICAgICAgICB9LAogICAgICAvLyAgICAgICAgICAgICB7CiAgICAgIC8vICAgICAgICAgICAgICAgICBoZWFkZXJzIDogewogICAgICAvLyAgICAgICAgICAgICAgICAgICAgIC8vICJqd3QtYXV0aC10b2tlbiIgOiBzdG9yYWdlLmdldEl0ZW0oImp3dC1hdXRoLXRva2VuIikKICAgICAgLy8gICAgICAgICAgICAgICAgIH0KICAgICAgLy8gICAgICAgICAgICAgfQogICAgICAvLyAgICAgICAgICkudGhlbihyZXMgPT4gewogICAgICAvLyAgICAgICAgICAgICAvLyB0aGlzLnNldERldGFpbEluZm8oICLsoJXrs7Qg7KGw7ZqMIOyEseqztSIsIHN0b3JhZ2UuZ2V0SXRlbSgiand0LWF1dGgtdG9rZW4iKSwgdGhpcy5pbmZvLCBKU09OLnN0cmluZ2lmeShyZXMuZGF0YSkpOwogICAgICAvLyAgICAgICAgIH0pLmNhdGNoKGUgPT4gewogICAgICAvLyAgICAgICAgICAgICB0aGlzLnNldERldGFpbEluZm8oIuygleuztCDsobDtmowg7Iuk7YyoIiwgIiIsIGUucmVzcG9uc2UuZGF0YS5tc2cpOwogICAgICAvLyAgICAgICAgIH0pOwogICAgfSwKICAgIGxvZ2luOiBmdW5jdGlvbiBsb2dpbigpIHsvLyAgICAgICAgIC8vIHN0b3JhZ2Uuc2V0SXRlbSgiand0LWF1dGgtdG9rZW4iLCAiIik7CiAgICAgIC8vICAgICAgICAgLy8gc3RvcmFnZS5zZXRJdGVtKCJsb2dpbl9laWQiLCAiIik7CiAgICAgIC8vCiAgICAgIC8vICAgICAgICAgYXhpb3MucG9zdCgiL2FwaS9sb2dpbmNoZWNrL3NpZ25pbiIsIHsKICAgICAgLy8gICAgICAgICAgICAgbWVtX2lkIDogdGhpcy5tZW1faWQsCiAgICAgIC8vICAgICAgICAgICAgIG1lbV9wdyA6IHRoaXMubWVtX3B3CiAgICAgIC8vICAgICAgICAgfSkudGhlbihyZXMgPT57CiAgICAgIC8vICAgICAgICAgICAgIGlmKHJlcy5kYXRhLnN0YXR1cyl7CiAgICAgIC8vCiAgICAgIC8vICAgICAgICAgICAgICAgICB0aGlzLm1lbV9pZCA9ICIiOwogICAgICAvLyAgICAgICAgICAgICAgICAgdGhpcy5tZW1fcHcgPSAiIjsKICAgICAgLy8gICAgICAgICAgICAgICAgIHRoaXMubWVzc2FnZSA9IHJlcy5kYXRhLmRhdGEubWVtX2lkICsgIuuhnCDroZzqt7jsnbgg65CY7JeI7Iq164uI64ukIjsKICAgICAgLy8KICAgICAgLy8gICAgICAgICAgICAgICAgIGNvbnNvbGUuZGlyKHJlcy5oZWFkZXJzWyJqd3QtYXV0aC10b2tlbiJdKTsKICAgICAgLy8gICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCIvLy8vLy8vLy8vIik7CiAgICAgIC8vCiAgICAgIC8vICAgICAgICAgICAgICAgICAvL+2ZlOuptOyXkCDsoJXrs7Qg7Lac66ClCiAgICAgIC8vICAgICAgICAgICAgICAgICB0aGlzLnNldEluZm8oIuuhnOq3uOyduCDshLHqs7UiLCByZXMuaGVhZGVyc1siand0LWF1dGgtdG9rZW4iXSwgSlNPTi5zdHJpbmdpZnkocmVzLmRhdGEuZGF0YSkpOwogICAgICAvLwogICAgICAvLyAgICAgICAgICAgICAgICAgLy/thqDtgbAgJiBtZW1faWQg7KCV67O0IOyggOyepQogICAgICAvLyAgICAgICAgICAgICAgICAgLy8gc3RvcmFnZS5zZXRJdGVtKCJqd3QtYXV0aC10b2tlbiIsIHJlcy5oZWFkZXJzWyJqd3QtYXV0aC10b2tlbiJdKTsKICAgICAgLy8gICAgICAgICAgICAgICAgIC8vIHN0b3JhZ2Uuc2V0SXRlbSgibG9naW5fZWlkIiwgcmVzLmRhdGEuZGF0YS5tZW1faWQpOwogICAgICAvLwogICAgICAvLyAgICAgICAgICAgICB9ZWxzZXsKICAgICAgLy8KICAgICAgLy8gICAgICAgICAgICAgICAgIHRoaXMuc2V0SW5mbygiIiwgIiIsICIiKTsKICAgICAgLy8gICAgICAgICAgICAgICAgIHRoaXMubWVzc2FnZSA9ICLroZzqt7jsnbgg7ZWY7IS47JqUIjsKICAgICAgLy8gICAgICAgICAgICAgICAgIGFsZXJ0KCLsnoXroKUg7KCV67O066W8IO2ZleyduCIpOwogICAgICAvLwogICAgICAvLyAgICAgICAgICAgICB9CiAgICAgIC8vCiAgICAgIC8vICAgICAgICAgfSkuY2F0Y2goZSA9PiB7CiAgICAgIC8vICAgICAgICAgICAgIHRoaXMuc2V0SW5mbygi7Iuk7YyoIiwgIiIsIEpTT04uc3RyaW5naWZ5KGUucmVzcG9uc2UgfHwgZS5tZXNzYWdlKSk7CiAgICAgIC8vICAgICAgICAgfSk7CiAgICB9LAogICAgaW5pdDogZnVuY3Rpb24gaW5pdCgpIHsvLyAgICAgICAgIC8vIGlmKHN0b3JhZ2UuZ2V0SXRlbSgiand0LWF1dGgtdG9rZW4iKSl7CiAgICAgIC8vICAgICAgICAgLy8gICAgIHRoaXMubWVzc2FnZSA9IHN0b3JhZ2UuZ2V0SXRlbSgibG9naW5fZWlkIikgKyAi66GcIOuhnOq3uOyduCDrkJjsl4jsirXri4jri6QiOwogICAgICAvLyAgICAgICAgIC8vIH1lbHNlewogICAgICAvLyAgICAgICAgIC8vICAgICBzdG9yYWdlLnNldEl0ZW0oImp3dC1hdXRoLXRva2VuIiwgIiIpOwogICAgICAvLyAgICAgICAgIC8vIH0KICAgICAgLy8gICAgIH0vL2luaXQoKQogICAgICAvLyB9LCBtb3VudGVkKCl7CiAgICAgIC8vICAgICB0aGlzLmluaXQoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAqBA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,GAAA,EAAA;AADA,GAFA;AAKA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,GAAA,EAAA,EADA;AAEA,MAAA,EAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA,sBAHA;AAIA,MAAA,QAAA,EAAA,eAJA;AAKA,MAAA,MAAA,EAAA,EALA;AAMA,MAAA,KAAA,EAAA,EANA;AAOA,MAAA,IAAA,EAAA,EAPA;AAQA,MAAA,UAAA,EAAA,EARA;AASA,MAAA,MAAA,EAAA;AATA,KAAA;AAWA,GAjBA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,mBACA,MADA,EACA,KADA,EACA,IADA,EACA;AACA,WAAA,MAAA,GAAA,MAAA;AACA,WAAA,KAAA,GAAA,KAAA;AACA,WAAA,IAAA,GAAA,IAAA;AACA,WAAA,MAAA,GAAA,IAAA;AACA,KANA;AAOA,IAAA,aAPA,yBAOA,MAPA,EAOA,KAPA,EAOA,IAPA,EAOA,UAPA,EAOA;AACA,WAAA,MAAA,GAAA,MAAA;AACA,WAAA,KAAA,GAAA,KAAA;AACA,WAAA,IAAA,GAAA,IAAA;AACA,WAAA,UAAA,GAAA,UAAA;AACA,KAZA;AAaA,IAAA,QAbA,sBAaA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA;AAEA,KAhBA;AAiBA,IAAA,MAjBA,oBAiBA,CACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,KA7BA;AA8BA,IAAA,OA9BA,qBA8BA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KA7CA;AA8CA,IAAA,KA9CA,mBA8CA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAjFA;AAkFA,IAAA,IAlFA,kBAkFA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3FA;AAnBA,CAAA","sourcesContent":["<template>\n    <div class=\"register\">\n        <div class=\"register-triangle\"></div>\n        <img src=\"../assets/login.png\" width=100%>\n        <h2 style=\"align-content: center\">{{message1}}<br><br></h2>\n\n        <form class=\"register-container\">\n            <p>ID : <input type=\"eid\" name=\"eid\" id=\"eid\" v-model=\"eid\" ></p>\n            <p>PW : <input type=\"password\" name=\"login\" id=\"pass\" v-model=\"pw\" > </p>\n            <p><input type=\"submit\" @click=\"login\" value=\"로그인\" id=\"login\"></p>\n<!--            <button id=\"logout\" @click=\"logout\">로그아웃</button>-->\n            <!-- <button id=\"getInfo\" @click=\"getInfo\">상세 정보 확인</button> -->\n            <button v-on:click=\"register\" class = \"btn-r\">아직 회원이 아니신가요?</button>\n        </form>\n\n        <br><hr><br>\n\n    </div>\n</template>\n\n<script>\n    // const axios = require('axios').default;\n\n    export default {\n        name: 'HelloWorld',\n        props: {\n            msg: String\n        },\n        data: function() {\n            return {\n                eid : \"\",\n                pw : \"\",\n                message1: \" 다다익선(多多益善) 회원이신가요? \",\n                message2:\"아직 회원이 아니신가요?\",\n                status: \"\",\n                token: \"\",\n                info: \"\",\n                detailInfo: \"\",\n                result: false\n            }\n        },\n\n        methods:{\n            setInfo(status, token, info){\n                this.status = status;\n                this.token = token;\n                this.info = info;\n                this.result = true;\n            },\n            setDetailInfo(status, token, info, detailInfo){\n                this.status = status;\n                this.token = token;\n                this.info = info;\n                this.detailInfo = detailInfo;\n            },\n            register(){\n                this.$router.push({ name: 'Register' })\n\n            },\n            logout(){\n                // storage.setItem(\"jwt-auth-token\", \"\");\n                // storage.setItem(\"login_eid\", \"\");\n\n                // this.mem_id = \"\";\n                // this.mem_pw = \"\";\n                //\n                // this.message = \"로그인해 주세요\";\n                // this.result = false;\n                //\n                // this.setDetailInfo(\"로그아웃 성공\", \"\", \"\");\n\n            },\n            getInfo() {\n                //         axios.post(\"/api/info\", {\n                //                 mem_id : this.mem_id,\n                //                 mem_pw : this.mem_pw\n                //             },\n                //             {\n                //                 headers : {\n                //                     // \"jwt-auth-token\" : storage.getItem(\"jwt-auth-token\")\n                //                 }\n                //             }\n                //         ).then(res => {\n                //             // this.setDetailInfo( \"정보 조회 성공\", storage.getItem(\"jwt-auth-token\"), this.info, JSON.stringify(res.data));\n                //         }).catch(e => {\n                //             this.setDetailInfo(\"정보 조회 실패\", \"\", e.response.data.msg);\n                //         });\n                     },\n                     login(){\n                //         // storage.setItem(\"jwt-auth-token\", \"\");\n                //         // storage.setItem(\"login_eid\", \"\");\n                //\n                //         axios.post(\"/api/logincheck/signin\", {\n                //             mem_id : this.mem_id,\n                //             mem_pw : this.mem_pw\n                //         }).then(res =>{\n                //             if(res.data.status){\n                //\n                //                 this.mem_id = \"\";\n                //                 this.mem_pw = \"\";\n                //                 this.message = res.data.data.mem_id + \"로 로그인 되었습니다\";\n                //\n                //                 console.dir(res.headers[\"jwt-auth-token\"]);\n                //                 console.log(\"//////////\");\n                //\n                //                 //화면에 정보 출력\n                //                 this.setInfo(\"로그인 성공\", res.headers[\"jwt-auth-token\"], JSON.stringify(res.data.data));\n                //\n                //                 //토큰 & mem_id 정보 저장\n                //                 // storage.setItem(\"jwt-auth-token\", res.headers[\"jwt-auth-token\"]);\n                //                 // storage.setItem(\"login_eid\", res.data.data.mem_id);\n                //\n                //             }else{\n                //\n                //                 this.setInfo(\"\", \"\", \"\");\n                //                 this.message = \"로그인 하세요\";\n                //                 alert(\"입력 정보를 확인\");\n                //\n                //             }\n                //\n                //         }).catch(e => {\n                //             this.setInfo(\"실패\", \"\", JSON.stringify(e.response || e.message));\n                //         });\n                     },\n                     init(){\n                //         // if(storage.getItem(\"jwt-auth-token\")){\n                //         //     this.message = storage.getItem(\"login_eid\") + \"로 로그인 되었습니다\";\n                //         // }else{\n                //         //     storage.setItem(\"jwt-auth-token\", \"\");\n                //         // }\n                //     }//init()\n                // }, mounted(){\n                //     this.init();\n                 }\n            }\n    }\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n    @import url(\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\");\n    @import url(\"https://fonts.googleapis.com/css2?family=Do+Hyeon&display=swap\");\n\n\n    body {\n        font-family: 'Do Hyeon', sans-serif;\n        @import url('https://fonts.googleapis.com/css2?family=Do+Hyeon&display=swap');\n        font-size:40px;\n        font-color:white;\n\n\n    }\n\n    button,\n    .register {\n        width: 400px;\n        margin: auto;\n        font-size: 10px;\n        font-family: 'Do Hyeon', sans-serif;\n    }\n\n    /* Reset top and bottom margins from certain elements */\n    .login-header,\n\n    button,\n    .register p {\n        color: white;\n        font-family: 'Do Hyeon', sans-serif;\n    }\n\n    /* The triangle form is achieved by a CSS hack */\n    .register-triangle {\n        width: 0;\n        margin-right: auto;\n        margin-left: auto;\n        align-content: center;\n        border: 12px solid white;\n        border-bottom-color: rgb(146, 139, 137);\n    }\n\n    .login-header {\n        background: rgb(146, 139, 137);\n        padding: 20px;\n        font-size: 1.4em;\n        font-weight: normal;\n        text-align: center;\n        text-transform: uppercase;\n        color: #fff;\n    }\n\n    button,\n    .register-container {\n        background: grey;\n        align-content: center;\n        padding: 12px;\n    }\n\n    /* Every row inside .login-container is defined with p tags */\n    button,\n    .register p {\n        padding: 12px;\n        font-family: 'Do Hyeon', sans-serif;\n    }\n\n    button,\n    .register input {\n        box-sizing: border-box;\n        display: block;\n        width: 100%;\n        border-width: 1px;\n        border-style: solid;\n        padding: 16px;\n        outline: 0;\n        font-family: inherit;\n        font-size: 0.95em;\n        align-content: center;\n        background: #fff;\n    }\n\n    .register input[type=\"mem_id\"],\n    .register input[type=\"password\"] {\n        background: #fff;\n        border-color: #bbb;\n        color: #555;\n    }\n\n    /* Text fields' focus effect */\n    .register input[type=\"mem_id\"]:focus,\n    .register input[type=\"password\"]:focus {\n        border-color: #888;\n    }\n\n    button,\n    .register input[type=\"submit\"] {\n        background: rgb(146, 139, 137);\n        border-color: white;\n        color: #fff;\n        cursor: pointer;\n    }\n\n    .register input[type=\"submit\"]:hover {\n        background: rgb(226, 226, 162);\n    }\n\n    .register input[type=\"submit\"]:focus {\n        border-color: rgb(226, 226, 162);\n    }\n\n    /*button{*/\n    /*    width: 100%;*/\n    /*    align-self: center;*/\n    /*}*/\n\n    /*.login input[type=\"submit\"]{*/\n    /*    width : 105%;*/\n    /*    align-self: center;*/\n    /*}*/\n\n    .btn-r {\n        background-color: tan;\n        border: none;\n        color: #ffffff;\n        cursor: pointer;\n        display: inline-block;\n        font-family: 'Do Hyeon', sans-serif;\n        font-size:40px;\n        font-size: 1em;\n        font-size: 22px;\n        line-height: 1em;\n        outline: none;\n        padding: 12px 40px 10px;\n        position: relative;\n        text-transform: uppercase;\n        /*font-weight: 700;*/\n\n    }\n    .btn-r:before,\n    .btn-r:after {\n        border-color: transparent;\n        -webkit-transition: all 0.25s;\n        transition: all 0.25s;\n        border-style: solid;\n        border-width: 0;\n        content: \"\";\n        height: 24px;\n        position: absolute;\n        width: 24px;\n    }\n    .btn-r:before {\n        border-color: #c47135;\n        border-right-width: 2px;\n        border-top-width: 2px;\n        right: -5px;\n        top: -5px;\n    }\n    .btn-r:after {\n        border-bottom-width: 2px;\n        border-color: #c47135;\n        border-left-width: 2px;\n        bottom: -5px;\n        left: -5px;\n    }\n    .btn-r:hover,\n    .btn-r.hover {\n        background-color: #c47135;\n    }\n    .btn-r:hover:before,\n    .btn-r.hover:before,\n    .btn-r:hover:after,\n    .btn-r.hover:after {\n        height: 100%;\n        width: 100%;\n    }\n</style>\n"],"sourceRoot":"src/components"}]}