{"remainingRequest":"C:\\Users\\Playdata\\Desktop\\the-more-the-better\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Playdata\\Desktop\\the-more-the-better\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Playdata\\Desktop\\the-more-the-better\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Playdata\\Desktop\\the-more-the-better\\frontend\\src\\components\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Playdata\\Desktop\\the-more-the-better\\frontend\\src\\components\\Login.vue","mtime":1599638177627},{"path":"C:\\Users\\Playdata\\Desktop\\the-more-the-better\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Playdata\\Desktop\\the-more-the-better\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Playdata\\Desktop\\the-more-the-better\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Playdata\\Desktop\\the-more-the-better\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Playdata\\Desktop\\the-more-the-better\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Playdata\\Desktop\\the-more-the-better\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Playdata\\Desktop\\the-more-the-better\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Playdata\\Desktop\\the-more-the-better\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKdmFyIHN0b3JhZ2UgPSB3aW5kb3cuc2Vzc2lvblN0b3JhZ2U7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnSGVsbG9Xb3JsZCcsCiAgcHJvcHM6IHsKICAgIG1zZzogU3RyaW5nCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbWVtX2lkOiAiIiwKICAgICAgbWVtX3B3OiAiIiwKICAgICAgc3RhdHVzOiAiIiwKICAgICAgdG9rZW46ICIiLAogICAgICBpbmZvOiAiIiwKICAgICAgZGV0YWlsSW5mbzogIiIsCiAgICAgIHJlc3VsdDogZmFsc2UKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBzZXRJbmZvOiBmdW5jdGlvbiBzZXRJbmZvKHN0YXR1cywgdG9rZW4sIGluZm8pIHsKICAgICAgdGhpcy5zdGF0dXMgPSBzdGF0dXM7CiAgICAgIHRoaXMudG9rZW4gPSB0b2tlbjsKICAgICAgdGhpcy5pbmZvID0gaW5mbzsKICAgICAgdGhpcy5yZXN1bHQgPSB0cnVlOwogICAgfSwKICAgIHNldERldGFpbEluZm86IGZ1bmN0aW9uIHNldERldGFpbEluZm8oc3RhdHVzLCB0b2tlbiwgaW5mbywgZGV0YWlsSW5mbykgewogICAgICB0aGlzLnN0YXR1cyA9IHN0YXR1czsKICAgICAgdGhpcy50b2tlbiA9IHRva2VuOwogICAgICB0aGlzLmluZm8gPSBpbmZvOwogICAgICB0aGlzLmRldGFpbEluZm8gPSBkZXRhaWxJbmZvOwogICAgfSwKICAgIHJlZ2lzdGVyOiBmdW5jdGlvbiByZWdpc3RlcigpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgIG5hbWU6ICdSZWdpc3RlcicKICAgICAgfSk7CiAgICB9LAogICAgbG9naW46IGZ1bmN0aW9uIGxvZ2luKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgY29uc29sZS5sb2coInZ1ZSA6IHN0YXJ0IGxvZ2luIik7CiAgICAgIGF4aW9zLnBvc3QoIi9tZW1iZXJzL2xvZ2luIiwgewogICAgICAgIG1lbV9pZDogdGhpcy5tZW1faWQsCiAgICAgICAgbWVtX3B3OiB0aGlzLm1lbV9wdwogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBpZiAocmVzLmRhdGEuc3RhdHVzKSB7CiAgICAgICAgICBjb25zb2xlLmxvZygic3RhdHVzIDogdHJ1ZSIpOwogICAgICAgICAgc3RvcmFnZS5zZXRJdGVtKCJtZW1iZXIiLCByZXMuZGF0YS5tZW1iZXIubm8pOwoKICAgICAgICAgIF90aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgICAgIG5hbWU6ICdIb21lJwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgewogICAgICAgIGNvbnNvbGUubG9nKCJsb2cgaW4gZmFpbCIpOyAvL2NvbnRyb2xsZXLsl5DshJwg64SY7Ja07JioIOyXkOufrCDrrLjqtawg7Lac66ClIAoKICAgICAgICBhbGVydChKU09OLnN0cmluZ2lmeShlLnJlc3BvbnNlLmRhdGEubWVzc2FnZSkpOwogICAgICB9KTsKICAgIH0sCiAgICBpbml0OiBmdW5jdGlvbiBpbml0KCkgewogICAgICBjb25zb2xlLmxvZygiZGF0YSBpbml0aWFsaXplIik7CiAgICAgIHRoaXMubWVtX2lkID0gIiIsIHRoaXMubWVtX3B3ID0gIiI7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5pbml0KCk7CiAgfQp9OyAvL2xvZ291dCgpewovLyBzdG9yYWdlLnNldEl0ZW0oImp3dC1hdXRoLXRva2VuIiwgIiIpOwovLyBzdG9yYWdlLnNldEl0ZW0oImxvZ2luX2VpZCIsICIiKTsKLy8gdGhpcy5tZW1faWQgPSAiIjsKLy8gdGhpcy5tZW1fcHcgPSAiIjsKLy8KLy8gdGhpcy5tZXNzYWdlID0gIuuhnOq3uOyduO2VtCDso7zshLjsmpQiOwovLyB0aGlzLnJlc3VsdCA9IGZhbHNlOwovLwovLyB0aGlzLnNldERldGFpbEluZm8oIuuhnOq3uOyVhOybgyDshLHqs7UiLCAiIiwgIiIpOwovL30sCi8vZ2V0SW5mbygpIHsKLy8gICAgICAgICBheGlvcy5wb3N0KCIvYXBpL2luZm8iLCB7Ci8vICAgICAgICAgICAgICAgICBtZW1faWQgOiB0aGlzLm1lbV9pZCwKLy8gICAgICAgICAgICAgICAgIG1lbV9wdyA6IHRoaXMubWVtX3B3Ci8vICAgICAgICAgICAgIH0sCi8vICAgICAgICAgICAgIHsKLy8gICAgICAgICAgICAgICAgIGhlYWRlcnMgOiB7Ci8vICAgICAgICAgICAgICAgICAgICAgLy8gImp3dC1hdXRoLXRva2VuIiA6IHN0b3JhZ2UuZ2V0SXRlbSgiand0LWF1dGgtdG9rZW4iKQovLyAgICAgICAgICAgICAgICAgfQovLyAgICAgICAgICAgICB9Ci8vICAgICAgICAgKS50aGVuKHJlcyA9PiB7Ci8vICAgICAgICAgICAgIC8vIHRoaXMuc2V0RGV0YWlsSW5mbyggIuygleuztCDsobDtmowg7ISx6rO1Iiwgc3RvcmFnZS5nZXRJdGVtKCJqd3QtYXV0aC10b2tlbiIpLCB0aGlzLmluZm8sIEpTT04uc3RyaW5naWZ5KHJlcy5kYXRhKSk7Ci8vICAgICAgICAgfSkuY2F0Y2goZSA9PiB7Ci8vICAgICAgICAgICAgIHRoaXMuc2V0RGV0YWlsSW5mbygi7KCV67O0IOyhsO2ajCDsi6TtjKgiLCAiIiwgZS5yZXNwb25zZS5kYXRhLm1zZyk7Ci8vICAgICAgICAgfSk7Ci8vICAgICB9LAovLyAgICAgbG9naW4oKXsKLy8gICAgICAgICAvLyBzdG9yYWdlLnNldEl0ZW0oImp3dC1hdXRoLXRva2VuIiwgIiIpOwovLyAgICAgICAgIC8vIHN0b3JhZ2Uuc2V0SXRlbSgibG9naW5fZWlkIiwgIiIpOwovLwovLyAgICAgICAgIGF4aW9zLnBvc3QoIi9hcGkvbG9naW5jaGVjay9zaWduaW4iLCB7Ci8vICAgICAgICAgICAgIG1lbV9pZCA6IHRoaXMubWVtX2lkLAovLyAgICAgICAgICAgICBtZW1fcHcgOiB0aGlzLm1lbV9wdwovLyAgICAgICAgIH0pLnRoZW4ocmVzID0+ewovLyAgICAgICAgICAgICBpZihyZXMuZGF0YS5zdGF0dXMpewovLwovLyAgICAgICAgICAgICAgICAgdGhpcy5tZW1faWQgPSAiIjsKLy8gICAgICAgICAgICAgICAgIHRoaXMubWVtX3B3ID0gIiI7Ci8vICAgICAgICAgICAgICAgICB0aGlzLm1lc3NhZ2UgPSByZXMuZGF0YS5kYXRhLm1lbV9pZCArICLroZwg66Gc6re47J24IOuQmOyXiOyKteuLiOuLpCI7Ci8vCi8vICAgICAgICAgICAgICAgICBjb25zb2xlLmRpcihyZXMuaGVhZGVyc1siand0LWF1dGgtdG9rZW4iXSk7Ci8vICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiLy8vLy8vLy8vLyIpOwovLwovLyAgICAgICAgICAgICAgICAgLy/tmZTrqbTsl5Ag7KCV67O0IOy2nOugpQovLyAgICAgICAgICAgICAgICAgdGhpcy5zZXRJbmZvKCLroZzqt7jsnbgg7ISx6rO1IiwgcmVzLmhlYWRlcnNbImp3dC1hdXRoLXRva2VuIl0sIEpTT04uc3RyaW5naWZ5KHJlcy5kYXRhLmRhdGEpKTsKLy8KLy8gICAgICAgICAgICAgICAgIC8v7Yag7YGwICYgbWVtX2lkIOygleuztCDsoIDsnqUKLy8gICAgICAgICAgICAgICAgIC8vIHN0b3JhZ2Uuc2V0SXRlbSgiand0LWF1dGgtdG9rZW4iLCByZXMuaGVhZGVyc1siand0LWF1dGgtdG9rZW4iXSk7Ci8vICAgICAgICAgICAgICAgICAvLyBzdG9yYWdlLnNldEl0ZW0oImxvZ2luX2VpZCIsIHJlcy5kYXRhLmRhdGEubWVtX2lkKTsKLy8KLy8gICAgICAgICAgICAgfWVsc2V7Ci8vCi8vICAgICAgICAgICAgICAgICB0aGlzLnNldEluZm8oIiIsICIiLCAiIik7Ci8vICAgICAgICAgICAgICAgICB0aGlzLm1lc3NhZ2UgPSAi66Gc6re47J24IO2VmOyEuOyalCI7Ci8vICAgICAgICAgICAgICAgICBhbGVydCgi7J6F66ClIOygleuztOulvCDtmZXsnbgiKTsKLy8KLy8gICAgICAgICAgICAgfQovLwovLyAgICAgICAgIH0pLmNhdGNoKGUgPT4gewovLyAgICAgICAgICAgICB0aGlzLnNldEluZm8oIuyLpO2MqCIsICIiLCBKU09OLnN0cmluZ2lmeShlLnJlc3BvbnNlIHx8IGUubWVzc2FnZSkpOwovLyAgICAgICAgIH0pOwovLyAgICAgfSwKLy8gICAgIGluaXQoKXsKLy8gICAgICAgICAvLyBpZihzdG9yYWdlLmdldEl0ZW0oImp3dC1hdXRoLXRva2VuIikpewovLyAgICAgICAgIC8vICAgICB0aGlzLm1lc3NhZ2UgPSBzdG9yYWdlLmdldEl0ZW0oImxvZ2luX2VpZCIpICsgIuuhnCDroZzqt7jsnbgg65CY7JeI7Iq164uI64ukIjsKLy8gICAgICAgICAvLyB9ZWxzZXsKLy8gICAgICAgICAvLyAgICAgc3RvcmFnZS5zZXRJdGVtKCJqd3QtYXV0aC10b2tlbiIsICIiKTsKLy8gICAgICAgICAvLyB9Ci8vICAgICB9Ly9pbml0KCkKLy8gfSwgbW91bnRlZCgpewovLyAgICAgdGhpcy5pbml0KCk7Ci8vIH0KLy8gICAgfQovLyAgICB9"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAsBA,OAAA,KAAA,MAAA,OAAA;AACA,IAAA,OAAA,GAAA,MAAA,CAAA,cAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,GAAA,EAAA;AADA,GAFA;AAKA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AAEA,MAAA,MAAA,EAAA,EAFA;AAGA,MAAA,MAAA,EAAA,EAHA;AAIA,MAAA,KAAA,EAAA,EAJA;AAKA,MAAA,IAAA,EAAA,EALA;AAMA,MAAA,UAAA,EAAA,EANA;AAOA,MAAA,MAAA,EAAA;AAPA,KAAA;AASA,GAfA;AAgBA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,mBACA,MADA,EACA,KADA,EACA,IADA,EACA;AACA,WAAA,MAAA,GAAA,MAAA;AACA,WAAA,KAAA,GAAA,KAAA;AACA,WAAA,IAAA,GAAA,IAAA;AACA,WAAA,MAAA,GAAA,IAAA;AACA,KANA;AAOA,IAAA,aAPA,yBAOA,MAPA,EAOA,KAPA,EAOA,IAPA,EAOA,UAPA,EAOA;AACA,WAAA,MAAA,GAAA,MAAA;AACA,WAAA,KAAA,GAAA,KAAA;AACA,WAAA,IAAA,GAAA,IAAA;AACA,WAAA,UAAA,GAAA,UAAA;AACA,KAZA;AAaA,IAAA,QAbA,sBAaA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA;AACA,KAfA;SAAA,mB;;;AAkBA,MAAA,OAAA,CAAA,GAAA,CAAA,mBAAA;AACA,MAAA,KAAA,CAAA,IAAA,CAAA,gBAAA,EAAA;AACA,QAAA,MAAA,EAAA,KAAA,MADA;AAEA,QAAA,MAAA,EAAA,KAAA;AAFA,OAAA,EAGA,IAHA,CAGA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,eAAA;AACA,UAAA,OAAA,CAAA,OAAA,CAAA,QAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,EAAA;;AACA,UAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AAAA,YAAA,IAAA,EAAA;AAAA,WAAA;AACA;AACA,OATA,EASA,KATA,CASA,UAAA,CAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,aAAA,EADA,CAEA;;AACA,QAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CAAA,CAAA,QAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA;AACA,OAbA;AAcA,KAjCA;AAkCA,IAAA,IAlCA,kBAkCA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,iBAAA;AACA,WAAA,MAAA,GAAA,EAAA,EACA,KAAA,MAAA,GAAA,EADA;AAEA;AAtCA,GAhBA;AAuDA,EAAA,OAvDA,qBAuDA;AACA,SAAA,IAAA;AACA;AAzDA,CAAA,C,CA2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["<template>\n    <div class=\"register\">\n        <div class=\"register-triangle\"></div>\n        <img src=\"../assets/login.png\" width=100%>\n        <h2 style=\"align-content: center\">다다익선(多多益善) 회원이신가요?<br><br></h2>\n\n        <!-- 채연아 미안해... 수정했더니 css가 깨졌어.. ㅜ -->\n\n        <p>ID : <input type=\"eid\" name=\"eid\" id=\"eid\" v-model=\"mem_id\" ></p>\n        <p>PW : <input type=\"password\" name=\"login\" id=\"pass\" v-model=\"mem_pw\" > </p>\n            \n        <p><input type=\"button\" @click=\"login\" value=\"로그인\" id=\"login\"></p>\n            \n        <button v-on:click=\"register\" class = \"btn-r\">아직 회원이 아니신가요?</button>\n\n        <br><hr><br>\n\n    </div>\n</template>\n\n<script>\n    \n    import axios from 'axios';\n    const storage = window.sessionStorage; \n    export default {\n        name: 'HelloWorld',\n        props: {\n            msg: String\n        },\n        data: function() {\n            return {\n                mem_id : \"\",\n                mem_pw : \"\",\n                status: \"\",\n                token: \"\",\n                info: \"\",\n                detailInfo: \"\",\n                result: false\n            }\n        },\n        methods:{\n            setInfo(status, token, info){\n                this.status = status;\n                this.token = token;\n                this.info = info;\n                this.result = true;\n            },\n            setDetailInfo(status, token, info, detailInfo){\n                this.status = status;\n                this.token = token;\n                this.info = info;\n                this.detailInfo = detailInfo;\n            },\n            register(){\n                this.$router.push({ name: 'Register' })\n            },\n            login() {\n                \n                console.log(\"vue : start login\");\n                axios.post(\"/members/login\", {\n                    mem_id: this.mem_id,\n                    mem_pw: this.mem_pw\n                }).then(res => {\n                    if(res.data.status) {\n                        console.log(\"status : true\");\n                        storage.setItem(\"member\", res.data.member.no);\n                        this.$router.push({ name: 'Home' });\n                    }\n                }).catch(e => {\n                    console.log(\"log in fail\");\n                    //controller에서 넘어온 에러 문구 출력 \n                    alert(JSON.stringify(e.response.data.message));\n                });\n            },\n            init() {\n                console.log(\"data initialize\");\n                this.mem_id = \"\",\n                this.mem_pw = \"\"\n            }\n        }, mounted() {\n            this.init();\n        }\n    }\n            //logout(){\n                // storage.setItem(\"jwt-auth-token\", \"\");\n                // storage.setItem(\"login_eid\", \"\");\n                // this.mem_id = \"\";\n                // this.mem_pw = \"\";\n                //\n                // this.message = \"로그인해 주세요\";\n                // this.result = false;\n                //\n                // this.setDetailInfo(\"로그아웃 성공\", \"\", \"\");\n            //},\n            //getInfo() {\n                //         axios.post(\"/api/info\", {\n                //                 mem_id : this.mem_id,\n                //                 mem_pw : this.mem_pw\n                //             },\n                //             {\n                //                 headers : {\n                //                     // \"jwt-auth-token\" : storage.getItem(\"jwt-auth-token\")\n                //                 }\n                //             }\n                //         ).then(res => {\n                //             // this.setDetailInfo( \"정보 조회 성공\", storage.getItem(\"jwt-auth-token\"), this.info, JSON.stringify(res.data));\n                //         }).catch(e => {\n                //             this.setDetailInfo(\"정보 조회 실패\", \"\", e.response.data.msg);\n                //         });\n                //     },\n                //     login(){\n                //         // storage.setItem(\"jwt-auth-token\", \"\");\n                //         // storage.setItem(\"login_eid\", \"\");\n                //\n                //         axios.post(\"/api/logincheck/signin\", {\n                //             mem_id : this.mem_id,\n                //             mem_pw : this.mem_pw\n                //         }).then(res =>{\n                //             if(res.data.status){\n                //\n                //                 this.mem_id = \"\";\n                //                 this.mem_pw = \"\";\n                //                 this.message = res.data.data.mem_id + \"로 로그인 되었습니다\";\n                //\n                //                 console.dir(res.headers[\"jwt-auth-token\"]);\n                //                 console.log(\"//////////\");\n                //\n                //                 //화면에 정보 출력\n                //                 this.setInfo(\"로그인 성공\", res.headers[\"jwt-auth-token\"], JSON.stringify(res.data.data));\n                //\n                //                 //토큰 & mem_id 정보 저장\n                //                 // storage.setItem(\"jwt-auth-token\", res.headers[\"jwt-auth-token\"]);\n                //                 // storage.setItem(\"login_eid\", res.data.data.mem_id);\n                //\n                //             }else{\n                //\n                //                 this.setInfo(\"\", \"\", \"\");\n                //                 this.message = \"로그인 하세요\";\n                //                 alert(\"입력 정보를 확인\");\n                //\n                //             }\n                //\n                //         }).catch(e => {\n                //             this.setInfo(\"실패\", \"\", JSON.stringify(e.response || e.message));\n                //         });\n                //     },\n                //     init(){\n                //         // if(storage.getItem(\"jwt-auth-token\")){\n                //         //     this.message = storage.getItem(\"login_eid\") + \"로 로그인 되었습니다\";\n                //         // }else{\n                //         //     storage.setItem(\"jwt-auth-token\", \"\");\n                //         // }\n                //     }//init()\n                // }, mounted(){\n                //     this.init();\n                // }\n        //    }\n//    }\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n    @import url(\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\");\n    @import url(\"https://fonts.googleapis.com/css2?family=Do+Hyeon&display=swap\");\n    body {\n        font-family: 'Do Hyeon', sans-serif;\n        @import url('https://fonts.googleapis.com/css2?family=Do+Hyeon&display=swap');\n        font-size:40px;\n        font-color:white;\n    }\n    button,\n    .register {\n        width: 400px;\n        margin: auto;\n        font-size: 10px;\n        font-family: 'Do Hyeon', sans-serif;\n    }\n    /* Reset top and bottom margins from certain elements */\n    .login-header,\n    button,\n    .register p {\n        color: white;\n        font-family: 'Do Hyeon', sans-serif;\n    }\n    /* The triangle form is achieved by a CSS hack */\n    .register-triangle {\n        width: 0;\n        margin-right: auto;\n        margin-left: auto;\n        align-content: center;\n        border: 12px solid white;\n        border-bottom-color: rgb(146, 139, 137);\n    }\n    .login-header {\n        background: rgb(146, 139, 137);\n        padding: 20px;\n        font-size: 1.4em;\n        font-weight: normal;\n        text-align: center;\n        text-transform: uppercase;\n        color: #fff;\n    }\n    button,\n    .register-container {\n        background: grey;\n        align-content: center;\n        padding: 12px;\n    }\n    /* Every row inside .login-container is defined with p tags */\n    button,\n    .register p {\n        padding: 12px;\n        font-family: 'Do Hyeon', sans-serif;\n    }\n    button,\n    .register input {\n        box-sizing: border-box;\n        display: block;\n        width: 100%;\n        border-width: 1px;\n        border-style: solid;\n        padding: 16px;\n        outline: 0;\n        font-family: inherit;\n        font-size: 0.95em;\n        align-content: center;\n        background: #fff;\n    }\n    .register input[type=\"mem_id\"],\n    .register input[type=\"password\"] {\n        background: #fff;\n        border-color: #bbb;\n        color: #555;\n    }\n    /* Text fields' focus effect */\n    .register input[type=\"mem_id\"]:focus,\n    .register input[type=\"password\"]:focus {\n        border-color: #888;\n    }\n    button,\n    .register input[type=\"submit\"] {\n        background: rgb(146, 139, 137);\n        border-color: white;\n        color: #fff;\n        cursor: pointer;\n    }\n    .register input[type=\"submit\"]:hover {\n        background: rgb(226, 226, 162);\n    }\n    .register input[type=\"submit\"]:focus {\n        border-color: rgb(226, 226, 162);\n    }\n    /*button{*/\n    /*    width: 100%;*/\n    /*    align-self: center;*/\n    /*}*/\n    /*.login input[type=\"submit\"]{*/\n    /*    width : 105%;*/\n    /*    align-self: center;*/\n    /*}*/\n    .btn-r {\n        background-color: tan;\n        border: none;\n        color: #ffffff;\n        cursor: pointer;\n        display: inline-block;\n        font-family: 'Do Hyeon', sans-serif;\n        font-size:40px;\n        font-size: 1em;\n        font-size: 22px;\n        line-height: 1em;\n        outline: none;\n        padding: 12px 40px 10px;\n        position: relative;\n        text-transform: uppercase;\n        /*font-weight: 700;*/\n    }\n    .btn-r:before,\n    .btn-r:after {\n        border-color: transparent;\n        -webkit-transition: all 0.25s;\n        transition: all 0.25s;\n        border-style: solid;\n        border-width: 0;\n        content: \"\";\n        height: 24px;\n        position: absolute;\n        width: 24px;\n    }\n    .btn-r:before {\n        border-color: #c47135;\n        border-right-width: 2px;\n        border-top-width: 2px;\n        right: -5px;\n        top: -5px;\n    }\n    .btn-r:after {\n        border-bottom-width: 2px;\n        border-color: #c47135;\n        border-left-width: 2px;\n        bottom: -5px;\n        left: -5px;\n    }\n    .btn-r:hover,\n    .btn-r.hover {\n        background-color: #c47135;\n    }\n    .btn-r:hover:before,\n    .btn-r.hover:before,\n    .btn-r:hover:after,\n    .btn-r.hover:after {\n        height: 100%;\n        width: 100%;\n    }\n</style>"],"sourceRoot":"src/components"}]}